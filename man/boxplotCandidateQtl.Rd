% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quantgen.R
\name{boxplotCandidateQtl}
\alias{boxplotCandidateQtl}
\title{Boxplot of QTL}
\usage{
boxplotCandidateQtl(
  y,
  X,
  snp,
  simplify.imputed = TRUE,
  xlab = "SNP genotypes",
  maf.xlab = TRUE,
  ylab = "Phenotypes",
  main.title = NULL,
  show.points = FALSE,
  jit.fact = 1,
  varwidth = TRUE,
  notch = TRUE,
  suppress.warnings = TRUE,
  regline.intercept = NA,
  regline.slope = NA,
  regline.col = "red",
  regline.lty = 1,
  regline.legend = NULL,
  alleles = NULL,
  title.line = NA,
  counts.xticks = FALSE,
  mtext.y.line = 3,
  mtext.y.cex = 1,
  verbose = 1,
  ...
)
}
\arguments{
\item{y}{vector of phenotypes with genotype names}

\item{X}{matrix of bi-allelic SNP genotypes encoded in allele doses in [0,2], with genotypes in rows and SNPs in columns; missing values should be encoded as NA}

\item{snp}{character with SNP name corresponding to the candidate QTL to plot}

\item{simplify.imputed}{if TRUE, imputed genotypes will be transformed back to \{0,1,2\}}

\item{xlab}{label of the x-axis}

\item{maf.xlab}{if TRUE, the minor allele frequency will appear in the label of the x-axis}

\item{ylab}{label of the y-axis}

\item{main.title}{main title}

\item{show.points}{if TRUE, individual points will be shown, with \code{\link{jitter}}, especially useful if some genotypic classes have very low counts}

\item{jit.fact}{jitter factor used if \code{show.points} is TRUE}

\item{varwidth}{if TRUE, the boxes are drawn with widths proportional to the square-roots of the number of observations in the groups}

\item{notch}{if TRUE, a notch is drawn in each side of the boxes (see \code{\link[graphics]{boxplot}})}

\item{suppress.warnings}{if TRUE, \code{\link{suppressWarnings}} is used for \code{\link[graphics]{boxplot}}}

\item{regline.intercept}{intercept of the regression line}

\item{regline.slope}{slope of the regression line}

\item{regline.col}{color of the regression line}

\item{regline.lty}{style of the regression line}

\item{regline.legend}{legend of the regression line}

\item{alleles}{vector of characters of length 2, the second element being the allele which copies are counted in \code{X}}

\item{title.line}{line at which the main title should appear}

\item{counts.xticks}{if TRUE, the sample size of each genotypic class will be added to the x-axis ticks}

\item{mtext.y.line}{line at which the y-axis label should appear}

\item{mtext.y.cex}{cex of the y-axis label}

\item{verbose}{verbosity level (0/1)}

\item{...}{other arguments to \code{\link[graphics]{boxplot}}}
}
\value{
invisible list with \code{y} and \code{x} used to make the boxplot (same order, with no missing data)
}
\description{
Make a boxplot of a candidate QTL.
}
\examples{
\dontrun{## simulate genotypes
set.seed(1859)
I <- 200
P <- 2000
X <- simulGenosDose(nb.genos=I, nb.snps=P)

## make fake SNP coordinates
snp.coords <- data.frame(coord=1:ncol(X),
                         chr="chr1",
                         row.names=colnames(X),
                         stringsAsFactors=FALSE)

## simulate phenotypes (only additive effects)
modelA <- simulBvsr(Q=1, X=X, pi=0.01, pve=0.7, sigma.a2=1)

## test SNPs one by one with the univariate LMM
fit.u <- gemma(model="ulmm", y=modelA$Y[,1], X=X, snp.coords,
               W=modelA$W, out.dir=tempdir(), clean="all")

## diagnostic plots
plotHistPval(pvalues=fit.u$tests$p_wald)
cols <- rep("black",ncol(X)); cols[modelA$gamma==1] <- "red"
pvadj.AA <- qqplotPval(fit.u$tests$p_wald, col=cols, ctl.fdr.bh=TRUE,
                       plot.signif=TRUE)

## look at the best candidate QTL
snp <- rownames(fit.u$tests[order(fit.u$tests$p_wald),])[1]
boxplotCandidateQtl(y=modelA$Y[,1], X=X, snp=snp, main=snp, notch=FALSE,
                    show.points=TRUE)
fit <- lm(modelA$Y[,1] ~ X[,snp])
abline(fit, col="red")
abline(a=fit.u$global.mean["beta.hat"] - mean(X[snp]) * fit.u$tests[snp,"beta"],
       b=fit.u$tests[snp,"beta"])
legend("topright", legend=c("lm","gemma"), col=c("red","black"), lty=1, bty="n")
}
}
\author{
Timothee Flutre
}
